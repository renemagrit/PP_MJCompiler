INFO  22:50:20,861 - Compiling source file: D:\Marta SI\8. semestar\PP\Sintaksna analiza\Izvorni kod\MJCompiler\test\program.mj
INFO  22:50:20,907 - #2 program
INFO  22:50:20,907 - #21 test302
INFO  22:50:20,907 - #20 const
INFO  22:50:20,908 - #21 int
INFO  22:50:20,908 - #21 jedan
INFO  22:50:20,909 - #40 =
INFO  22:50:20,909 - #22 1
INFO  22:50:20,909 - #41 ;
INFO  22:50:20,911 - #21 int
INFO  22:50:20,911 - #21 i
INFO  22:50:20,911 - #43 ,
INFO  22:50:20,912 - #21 j
INFO  22:50:20,913 - #41 ;
INFO  22:50:20,913 - #21 bool
INFO  22:50:20,913 - #21 ibool
INFO  22:50:20,914 - #41 ;
INFO  22:50:20,914 - #21 int
INFO  22:50:20,914 - #21 niz
INFO  22:50:20,914 - #48 [
INFO  22:50:20,914 - #49 ]
INFO  22:50:20,914 - #41 ;
INFO  22:50:20,914 - #46 {
INFO  22:50:20,914 - #21 int
INFO  22:50:20,915 - #21 sum
INFO  22:50:20,915 - #44 (
INFO  22:50:20,915 - #21 int
INFO  22:50:20,915 - #21 z
INFO  22:50:20,915 - #43 ,
INFO  22:50:20,916 - #21 int
INFO  22:50:20,916 - #21 d
INFO  22:50:20,916 - #45 )
INFO  22:50:20,916 - #46 {
INFO  22:50:20,917 - #4 return
INFO  22:50:20,918 - #21 z
INFO  22:50:20,919 - #29 +
INFO  22:50:20,921 - #21 d
INFO  22:50:20,921 - #41 ;
INFO  22:50:20,922 - #47 }
INFO  22:50:20,922 - #21 int
INFO  22:50:20,923 - #21 inkrement
INFO  22:50:20,923 - #44 (
INFO  22:50:20,923 - #21 int
INFO  22:50:20,923 - #21 a
INFO  22:50:20,923 - #43 ,
INFO  22:50:20,923 - #21 int
INFO  22:50:20,923 - #21 inc
INFO  22:50:20,923 - #45 )
INFO  22:50:20,923 - #21 int
INFO  22:50:20,923 - #21 pom
INFO  22:50:20,923 - #41 ;
INFO  22:50:20,924 - #46 {
INFO  22:50:20,924 - #8 if
INFO  22:50:20,924 - #44 (
INFO  22:50:20,924 - #21 inc
INFO  22:50:20,924 - #34 ==
INFO  22:50:20,924 - #21 jedan
INFO  22:50:20,925 - #45 )
INFO  22:50:20,926 - #21 pom
INFO  22:50:20,926 - #40 =
INFO  22:50:20,926 - #22 1
INFO  22:50:20,927 - #41 ;
INFO  22:50:20,928 - #9 else
INFO  22:50:20,928 - #8 if
INFO  22:50:20,928 - #44 (
INFO  22:50:20,928 - #21 inc
INFO  22:50:20,928 - #34 ==
INFO  22:50:20,928 - #22 2
INFO  22:50:20,928 - #45 )
INFO  22:50:20,928 - #21 pom
INFO  22:50:20,929 - #40 =
INFO  22:50:20,930 - #21 a
INFO  22:50:20,930 - #41 ;
INFO  22:50:20,930 - #4 return
INFO  22:50:20,932 - #21 a
INFO  22:50:20,932 - #41 ;
INFO  22:50:20,932 - #47 }
INFO  22:50:20,933 - #21 bool
INFO  22:50:20,933 - #21 verify
INFO  22:50:20,933 - #44 (
INFO  22:50:20,933 - #45 )
INFO  22:50:20,934 - #46 {
INFO  22:50:20,934 - #3 print
INFO  22:50:20,934 - #44 (
INFO  22:50:20,934 - #24 'v'
INFO  22:50:20,934 - #45 )
INFO  22:50:20,936 - #41 ;
INFO  22:50:20,936 - #4 return
INFO  22:50:20,936 - #23 false
INFO  22:50:20,936 - #41 ;
INFO  22:50:20,937 - #47 }
INFO  22:50:20,937 - #5 void
INFO  22:50:20,937 - #21 main
INFO  22:50:20,938 - #44 (
INFO  22:50:20,938 - #45 )
INFO  22:50:20,938 - #46 {
INFO  22:50:20,938 - #8 if
INFO  22:50:20,938 - #44 (
INFO  22:50:20,938 - #22 1
INFO  22:50:20,938 - #35 !=
INFO  22:50:20,938 - #22 1
INFO  22:50:20,938 - #45 )
INFO  22:50:20,939 - #3 print
INFO  22:50:20,939 - #44 (
INFO  22:50:20,939 - #30 -
INFO  22:50:20,939 - #22 6
INFO  22:50:20,939 - #45 )
INFO  22:50:20,939 - #41 ;
INFO  22:50:20,939 - #9 else
INFO  22:50:20,939 - #3 print
INFO  22:50:20,940 - #44 (
INFO  22:50:20,940 - #22 0
INFO  22:50:20,940 - #45 )
INFO  22:50:20,940 - #41 ;
INFO  22:50:20,940 - #21 ibool
INFO  22:50:20,940 - #40 =
INFO  22:50:20,940 - #23 false
INFO  22:50:20,940 - #41 ;
INFO  22:50:20,940 - #21 i
INFO  22:50:20,940 - #40 =
INFO  22:50:20,940 - #22 0
INFO  22:50:20,940 - #41 ;
INFO  22:50:20,940 - #10 do
INFO  22:50:20,940 - #46 {
INFO  22:50:20,940 - #8 if
INFO  22:50:20,941 - #44 (
INFO  22:50:20,941 - #21 i
INFO  22:50:20,941 - #34 ==
INFO  22:50:20,941 - #22 2
INFO  22:50:20,941 - #45 )
INFO  22:50:20,941 - #21 ibool
INFO  22:50:20,941 - #40 =
INFO  22:50:20,941 - #23 true
INFO  22:50:20,941 - #41 ;
INFO  22:50:20,941 - #21 i
INFO  22:50:20,941 - #25 ++
INFO  22:50:20,941 - #41 ;
INFO  22:50:20,942 - #47 }
INFO  22:50:20,942 - #11 while
INFO  22:50:20,942 - #44 (
INFO  22:50:20,942 - #21 i
INFO  22:50:20,942 - #36 <
INFO  22:50:20,942 - #22 5
INFO  22:50:20,942 - #45 )
INFO  22:50:20,943 - #41 ;
INFO  22:50:20,943 - #8 if
INFO  22:50:20,943 - #44 (
INFO  22:50:20,943 - #21 ibool
INFO  22:50:20,943 - #45 )
INFO  22:50:20,943 - #8 if
INFO  22:50:20,943 - #44 (
INFO  22:50:20,944 - #21 i
INFO  22:50:20,944 - #34 ==
INFO  22:50:20,944 - #22 5
INFO  22:50:20,944 - #45 )
INFO  22:50:20,944 - #3 print
INFO  22:50:20,944 - #44 (
INFO  22:50:20,944 - #22 1
INFO  22:50:20,944 - #45 )
INFO  22:50:20,944 - #41 ;
INFO  22:50:20,944 - #9 else
INFO  22:50:20,944 - #3 print
INFO  22:50:20,944 - #44 (
INFO  22:50:20,945 - #30 -
INFO  22:50:20,945 - #22 1
INFO  22:50:20,945 - #45 )
INFO  22:50:20,945 - #41 ;
INFO  22:50:20,945 - #21 niz
INFO  22:50:20,945 - #40 =
INFO  22:50:20,945 - #7 new
INFO  22:50:20,945 - #21 int
INFO  22:50:20,945 - #48 [
INFO  22:50:20,945 - #22 3
INFO  22:50:20,945 - #49 ]
INFO  22:50:20,946 - #41 ;
INFO  22:50:20,946 - #21 niz
INFO  22:50:20,946 - #48 [
INFO  22:50:20,946 - #22 0
INFO  22:50:20,946 - #49 ]
INFO  22:50:20,946 - #40 =
INFO  22:50:20,947 - #22 1
INFO  22:50:20,947 - #41 ;
INFO  22:50:20,947 - #21 niz
INFO  22:50:20,947 - #48 [
INFO  22:50:20,947 - #22 1
INFO  22:50:20,947 - #49 ]
INFO  22:50:20,947 - #40 =
INFO  22:50:20,947 - #22 2
INFO  22:50:20,947 - #41 ;
INFO  22:50:20,947 - #21 niz
INFO  22:50:20,948 - #48 [
INFO  22:50:20,948 - #22 2
INFO  22:50:20,948 - #49 ]
INFO  22:50:20,948 - #40 =
INFO  22:50:20,948 - #21 sum
INFO  22:50:20,948 - #44 (
ERROR 22:50:20,948 - 
Sintaksna greska na liniji 52
ERROR 22:50:20,948 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 52
