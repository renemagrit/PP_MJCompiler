INFO  00:56:53,294 - Compiling source file: D:\Marta SI\8. semestar\PP\Sintaksna analiza\Izvorni kod\PP_MJCompiler\MJCompiler\test\program.mj
INFO  00:56:53,402 - #2 program
INFO  00:56:53,403 - #47 test302
INFO  00:56:53,403 - #20 const
INFO  00:56:53,404 - #47 int
INFO  00:56:53,405 - #47 i
INFO  00:56:53,420 - #36 =
INFO  00:56:53,423 - #49 1
INFO  00:56:53,423 - #37 ;
INFO  00:56:53,424 - #20 const
INFO  00:56:53,424 - #47 char
INFO  00:56:53,424 - #47 y
INFO  00:56:53,425 - #36 =
INFO  00:56:53,426 - #48 1
INFO  00:56:53,426 - #37 ;
INFO  00:56:53,426 - #47 bool
INFO  00:56:53,426 - #47 b
INFO  00:56:53,427 - #37 ;
INFO  00:56:53,428 - #47 int
INFO  00:56:53,430 - #47 zna
INFO  00:56:53,430 - #39 ,
INFO  00:56:53,431 - #47 beta
INFO  00:56:53,431 - #44 [
INFO  00:56:53,431 - #45 ]
INFO  00:56:53,431 - #39 ,
INFO  00:56:53,439 - #47 a
INFO  00:56:53,439 - #44 [
INFO  00:56:53,439 - #45 ]
INFO  00:56:53,439 - #37 ;
INFO  00:56:53,440 - #42 {
INFO  00:56:53,440 - #47 int
INFO  00:56:53,440 - #47 fja
INFO  00:56:53,441 - #40 (
INFO  00:56:53,442 - #41 )
INFO  00:56:53,443 - #42 {
INFO  00:56:53,444 - #43 }
INFO  00:56:53,445 - #47 int
INFO  00:56:53,446 - #47 aa
INFO  00:56:53,446 - #40 (
INFO  00:56:53,446 - #47 int
INFO  00:56:53,446 - #47 a
INFO  00:56:53,446 - #41 )
INFO  00:56:53,447 - #47 char
INFO  00:56:53,447 - #47 b
INFO  00:56:53,447 - #37 ;
INFO  00:56:53,447 - #47 int
INFO  00:56:53,448 - #47 k
INFO  00:56:53,448 - #37 ;
INFO  00:56:53,448 - #42 {
INFO  00:56:53,448 - #47 b
INFO  00:56:53,448 - #36 =
INFO  00:56:53,452 - #48 1
INFO  00:56:53,455 - #37 ;
INFO  00:56:53,458 - #47 a
INFO  00:56:53,458 - #36 =
INFO  00:56:53,458 - #49 2
INFO  00:56:53,459 - #37 ;
INFO  00:56:53,459 - #47 k
INFO  00:56:53,459 - #36 =
INFO  00:56:53,459 - #47 bb
INFO  00:56:53,459 - #37 ;
INFO  00:56:53,459 - #43 }
INFO  00:56:53,459 - #5 void
INFO  00:56:53,460 - #47 main
INFO  00:56:53,460 - #40 (
INFO  00:56:53,460 - #41 )
INFO  00:56:53,461 - #42 {
INFO  00:56:53,461 - #43 }
INFO  00:56:53,461 - #43 }
INFO  00:56:53,491 - Program(
  ProgName(
   test302
  ) [ProgName]
  MultiProgramDeclarationList(
    MultiProgramDeclarationList(
      MultiProgramDeclarationList(
        MultiProgramDeclarationList(
          NoDecl(
          ) [NoDecl]
          ConstProgramDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              SingleConstDeclaration(
                ConstValue(
                 i
                  ConstOptionNumber(
                    NumberConstant(
                     1
                    ) [NumberConstant]
                  ) [ConstOptionNumber]
                ) [ConstValue]
              ) [SingleConstDeclaration]
            ) [ConstDeclaration]
          ) [ConstProgramDeclaration]
        ) [MultiProgramDeclarationList]
        ConstProgramDeclaration(
          ConstDeclaration(
            Type(
             char
            ) [Type]
            SingleConstDeclaration(
              ConstValue(
               y
                ConstOptionChar(
                  CharConstant(
                   1
                  ) [CharConstant]
                ) [ConstOptionChar]
              ) [ConstValue]
            ) [SingleConstDeclaration]
          ) [ConstDeclaration]
        ) [ConstProgramDeclaration]
      ) [MultiProgramDeclarationList]
      VarProgramDeclaration(
        VarDeclaration(
          Type(
           bool
          ) [Type]
          SingleVarDeclaration(
            VarValue(
             b
              NoBrackArrayList(
              ) [NoBrackArrayList]
            ) [VarValue]
          ) [SingleVarDeclaration]
        ) [VarDeclaration]
      ) [VarProgramDeclaration]
    ) [MultiProgramDeclarationList]
    VarProgramDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        VarDeclarationList(
          VarDeclarationList(
            SingleVarDeclaration(
              VarValue(
               zna
                NoBrackArrayList(
                ) [NoBrackArrayList]
              ) [VarValue]
            ) [SingleVarDeclaration]
            VarValue(
             beta
              BrackArrayLst(
              ) [BrackArrayLst]
            ) [VarValue]
          ) [VarDeclarationList]
          VarValue(
           a
            BrackArrayLst(
            ) [BrackArrayLst]
          ) [VarValue]
        ) [VarDeclarationList]
      ) [VarDeclaration]
    ) [VarProgramDeclaration]
  ) [MultiProgramDeclarationList]
  RepeatMethodDeclaration(
    RepeatMethodDeclaration(
      RepeatMethodDeclaration(
        NoRepeatMethodDeclaration(
        ) [NoRepeatMethodDeclaration]
        MethodDeclaration(
          MethodHeader(
            CustomMethodDeclType(
              Type(
               int
              ) [Type]
            ) [CustomMethodDeclType]
           fja
          ) [MethodHeader]
          FormParamsBegin(
          ) [FormParamsBegin]
          NoFromParameters(
          ) [NoFromParameters]
          FormParamsEnd(
          ) [FormParamsEnd]
          NoMethodDelVarList(
          ) [NoMethodDelVarList]
          NoStatementListOpt(
          ) [NoStatementListOpt]
        ) [MethodDeclaration]
      ) [RepeatMethodDeclaration]
      MethodDeclaration(
        MethodHeader(
          CustomMethodDeclType(
            Type(
             int
            ) [Type]
          ) [CustomMethodDeclType]
         aa
        ) [MethodHeader]
        FormParamsBegin(
        ) [FormParamsBegin]
        FromParameters(
          SingleFormParams(
            FromParamsValue(
              Type(
               int
              ) [Type]
              VarValue(
               a
                NoBrackArrayList(
                ) [NoBrackArrayList]
              ) [VarValue]
            ) [FromParamsValue]
          ) [SingleFormParams]
        ) [FromParameters]
        FormParamsEnd(
        ) [FormParamsEnd]
        MultiMethodDelVarList(
          MultiMethodDelVarList(
            NoMethodDelVarList(
            ) [NoMethodDelVarList]
            VarDeclaration(
              Type(
               char
              ) [Type]
              SingleVarDeclaration(
                VarValue(
                 b
                  NoBrackArrayList(
                  ) [NoBrackArrayList]
                ) [VarValue]
              ) [SingleVarDeclaration]
            ) [VarDeclaration]
          ) [MultiMethodDelVarList]
          VarDeclaration(
            Type(
             int
            ) [Type]
            SingleVarDeclaration(
              VarValue(
               k
                NoBrackArrayList(
                ) [NoBrackArrayList]
              ) [VarValue]
            ) [SingleVarDeclaration]
          ) [VarDeclaration]
        ) [MultiMethodDelVarList]
        StatementListOpt(
          StatementListOpt(
            StatementListOpt(
              NoStatementListOpt(
              ) [NoStatementListOpt]
              DesStatement(
                DesignatorStatementAssign(
                  AssignOpeeratorExpresion(
                    Designator(
                     b
                      NoDsgnList(
                      ) [NoDsgnList]
                    ) [Designator]
                    AssignOperator(
                    ) [AssignOperator]
                    Expression(
                      NoNegativePrefix(
                      ) [NoNegativePrefix]
                      BasicTerm(
                        FactorCharConst(
                          CharConstant(
                           1
                          ) [CharConstant]
                        ) [FactorCharConst]
                        NoMulOptTerm(
                        ) [NoMulOptTerm]
                      ) [BasicTerm]
                      NoExpressionList(
                      ) [NoExpressionList]
                    ) [Expression]
                  ) [AssignOpeeratorExpresion]
                ) [DesignatorStatementAssign]
              ) [DesStatement]
            ) [StatementListOpt]
            DesStatement(
              DesignatorStatementAssign(
                AssignOpeeratorExpresion(
                  Designator(
                   a
                    NoDsgnList(
                    ) [NoDsgnList]
                  ) [Designator]
                  AssignOperator(
                  ) [AssignOperator]
                  Expression(
                    NoNegativePrefix(
                    ) [NoNegativePrefix]
                    BasicTerm(
                      FactorNumConst(
                        NumberConstant(
                         2
                        ) [NumberConstant]
                      ) [FactorNumConst]
                      NoMulOptTerm(
                      ) [NoMulOptTerm]
                    ) [BasicTerm]
                    NoExpressionList(
                    ) [NoExpressionList]
                  ) [Expression]
                ) [AssignOpeeratorExpresion]
              ) [DesignatorStatementAssign]
            ) [DesStatement]
          ) [StatementListOpt]
          DesStatement(
            DesignatorStatementAssign(
              AssignOpeeratorExpresion(
                Designator(
                 k
                  NoDsgnList(
                  ) [NoDsgnList]
                ) [Designator]
                AssignOperator(
                ) [AssignOperator]
                Expression(
                  NoNegativePrefix(
                  ) [NoNegativePrefix]
                  BasicTerm(
                    FactorDesignator(
                      Designator(
                       bb
                        NoDsgnList(
                        ) [NoDsgnList]
                      ) [Designator]
                    ) [FactorDesignator]
                    NoMulOptTerm(
                    ) [NoMulOptTerm]
                  ) [BasicTerm]
                  NoExpressionList(
                  ) [NoExpressionList]
                ) [Expression]
              ) [AssignOpeeratorExpresion]
            ) [DesignatorStatementAssign]
          ) [DesStatement]
        ) [StatementListOpt]
      ) [MethodDeclaration]
    ) [RepeatMethodDeclaration]
    MethodDeclaration(
      MethodHeader(
        VoidMethodDeclType(
        ) [VoidMethodDeclType]
       main
      ) [MethodHeader]
      FormParamsBegin(
      ) [FormParamsBegin]
      NoFromParameters(
      ) [NoFromParameters]
      FormParamsEnd(
      ) [FormParamsEnd]
      NoMethodDelVarList(
      ) [NoMethodDelVarList]
      NoStatementListOpt(
      ) [NoStatementListOpt]
    ) [MethodDeclaration]
  ) [RepeatMethodDeclaration]
) [Program]
INFO  00:56:53,491 - ===================================
INFO  00:56:53,497 - Deklarisana CONST promenljiva i tip:int Vredosti: 1 na liniji 3
INFO  00:56:53,497 - Deklarisana CONST promenljiva y tip:char Vredosti: 49 na liniji 4
ERROR 00:56:53,498 - Nije pronadjen tip bool u tabeli simbola! 
INFO  00:56:53,498 - Deklarisana promenljiva b tip:char - GLOBAL VAR na liniji 5
INFO  00:56:53,498 - Deklarisana promenljiva zna tip:int - GLOBAL VAR na liniji 6
INFO  00:56:53,498 - Deklarisana promenljiva beta tip:int - GLOBAL VAR na liniji 6
INFO  00:56:53,498 - Deklarisana promenljiva a tip:int - GLOBAL VAR na liniji 6
INFO  00:56:53,498 - Obradjuje se metoda: fja na liniji 10
INFO  00:56:53,498 - Obradjuje se metoda: aa na liniji 11
INFO  00:56:53,499 - Deklarisana promenljiva a tip:int - FUNKCIJA na liniji 11
INFO  00:56:53,499 - Deklarisana promenljiva b tip:char - FUNKCIJA na liniji 11
INFO  00:56:53,499 - Deklarisana promenljiva k tip:int - FUNKCIJA na liniji 11
INFO  00:56:53,499 - Designator b pronadjen! na liniji 12
INFO  00:56:53,501 - EXPR TYPE:CharConst
INFO  00:56:53,501 - Designator a pronadjen! na liniji 13
INFO  00:56:53,502 - EXPR TYPE:NumConst
INFO  00:56:53,502 - Designator k pronadjen! na liniji 14
ERROR 00:56:53,503 - Greska! Designator bb nije deklarisan! na liniji 14
